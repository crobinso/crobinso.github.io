<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cole's dev log</title><link href="https://crobinso.github.io/" rel="alternate"></link><link href="https://crobinso.github.io/feeds/all.atom.xml" rel="self"></link><id>https://crobinso.github.io/</id><updated>2019-04-09T14:01:00-04:00</updated><entry><title>Host 'Network Interfaces' panel removed from virt-manager</title><link href="https://crobinso.github.io/2019/04/host-network-interfaces-panel-removed.html" rel="alternate"></link><published>2019-04-09T14:01:00-04:00</published><updated>2019-04-09T14:01:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2019-04-09:/2019/04/host-network-interfaces-panel-removed.html</id><summary type="html">&lt;p&gt;I released &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00087.html"&gt;virt-manager 2.0.0&lt;/a&gt; in October 2018. Since the release contained the full port to python3, it seemed like a good opportunity to drop some baggage from the app.&lt;/p&gt;
&lt;p&gt;The biggest piece we removed was the UI for managing host network interfaces. This is the Connection Details-&gt;Network …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I released &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00087.html"&gt;virt-manager 2.0.0&lt;/a&gt; in October 2018. Since the release contained the full port to python3, it seemed like a good opportunity to drop some baggage from the app.&lt;/p&gt;
&lt;p&gt;The biggest piece we removed was the UI for managing host network interfaces. This is the Connection Details-&gt;Network Interfaces panel, and the 'New Interface' wizard for defining host network definitions for things like bridges, bonds, and vlan devices. The main screen of the old UI looked like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://2.bp.blogspot.com/-z9wAKvWEkck/XKvexfuWBqI/AAAAAAAAC5w/4j3bap-0-7cQxeMQ9bhQl5a-969EK4kpACLcBGAs/s1600/Screenshot%2Bfrom%2B2019-04-08%2B19-47-21.png"&gt;&lt;img alt="" height="280" src="https://2.bp.blogspot.com/-z9wAKvWEkck/XKvexfuWBqI/AAAAAAAAC5w/4j3bap-0-7cQxeMQ9bhQl5a-969EK4kpACLcBGAs/s400/Screenshot%2Bfrom%2B2019-04-08%2B19-47-21.png" width="400"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Behind the scenes, this UI was using libvirt's Interface APIs, which also power the 'virsh iface-*' commands. These APIs are little more than a wrapper around the &lt;a href="https://pagure.io/netcf"&gt;netcf&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;netcf aimed to be a linux distro independent API for network device configuration. On Red Hat distros this meant turning the API's XML format into an /etc/sysconfig/network script. There were even pie-in-the-sky ideas about NetworkManager one day using netcf.&lt;/p&gt;
&lt;p&gt;In practice though the library never really took off. It was years before a debian backend showed up, contributed by a Red Hatter in the hope of increasing library uptake, though it didn't seem to help. netcf basically only existed to serve the libvirt Interface APIs, yet those APIs were never really used by any major libvirt consuming app, besides virt-manager. And in virt-manager's case it was largely just slapping some UI over the XML format and lifecycle operations.&lt;/p&gt;
&lt;p&gt;For virt-manager's usecases we hoped that netcf would make it trivial to bridge the host's network interface, which when used with VMs would give them first class IP addresses on the host network setup, not NAT like the 'default' virtual network. Unfortunately though the UI would create the ifcfg files well enough, behind the scenes nothing played well with NetworkManager for years and years. The standard suggestion for was to disable NetworkManager if you wanted to bridge your host NIC. Not very user friendly. Some people did manage to use the UI to that effect but it was never a trivial process.&lt;/p&gt;
&lt;p&gt;Nowadays NetworkManager can handle bridging natively and is much more powerful than what virt-manager/libvirt/netcf provide. The virt-manager UI was more likely to shoot you in the foot than make things simple. And it had become increasingly clear that virt-manager was not the place to maintain host network config UI.&lt;/p&gt;
&lt;p&gt;So we made the decision to drop all this from virt-manager in 2.0.0. netcf and the libvirt interface APIs still exist. If you're interested in some more history on the interface API/netcf difficulties, check out &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00049.html"&gt;Laine's email&lt;/a&gt; to virt-tools-list.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>python-bugzilla + bugzilla 5.0 API keys</title><link href="https://crobinso.github.io/2019/01/python-bugzilla-bugzilla-50-api-keys.html" rel="alternate"></link><published>2019-01-09T17:58:00-05:00</published><updated>2019-01-09T17:58:00-05:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2019-01-09:/2019/01/python-bugzilla-bugzilla-50-api-keys.html</id><summary type="html">&lt;p&gt;For many uses of /usr/bin/bugzilla and python-bugzilla, it's necessary to actually be logged in to a bugzilla server. Creating bugs, editing bugs, querying private data, etc.&lt;/p&gt;
&lt;p&gt;Up until now anyone that's used the command line tool has periodically had to do a 'bugzilla login' to refresh their authentication …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For many uses of /usr/bin/bugzilla and python-bugzilla, it's necessary to actually be logged in to a bugzilla server. Creating bugs, editing bugs, querying private data, etc.&lt;/p&gt;
&lt;p&gt;Up until now anyone that's used the command line tool has periodically had to do a 'bugzilla login' to refresh their authentication cache. In older bugzilla versions this was an HTTP cookie, more recently it's a bugzilla API token. Generally 'login' calls were needed infrequently on a single machine as tokens would remain valid for a long time.&lt;/p&gt;
&lt;p&gt;Recently, bugzilla.redhat.com received a big update to bugzilla 5.0. However with that update it seems like API tokens now expire after a week, which has necessitated lots more 'bugzilla login' calls than I'm used to.&lt;/p&gt;
&lt;p&gt;Thankfully with bugzilla 5.0 and later there's a better option: API keys. Here's how to to use them transparently with /usr/bin/bugzilla and all python-bugzilla library usage. Here's steps for enabling API keys with bugzilla.redhat.com, but the same process should roughly apply to other bugzilla instances too.&lt;/p&gt;
&lt;p&gt;Login to the bugzilla web UI, click your email, select Preferences, select API Keys. Generate an API key with an optional comment like 'python-bugzilla'. Afterwards the screen will look something like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://3.bp.blogspot.com/-fi-nFEuW71o/XDZ7h-5oIWI/AAAAAAAAC4g/3jiO8m8nZN83chbw4-Wa9PHUjZvebEHCACLcBGAs/s1600/bugzilla-apikey.png"&gt;&lt;img alt="" height="384" src="https://3.bp.blogspot.com/-fi-nFEuW71o/XDZ7h-5oIWI/AAAAAAAAC4g/3jiO8m8nZN83chbw4-Wa9PHUjZvebEHCACLcBGAs/s640/bugzilla-apikey.png" width="640"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MY-EXAMPLE-API-KEY is not my actual key, I just replaced it for demo purposes. The actual key is a long string of characters and numbers. Copy that string value and write a bugzillarc file like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;$ cat ~/.config/python-bugzilla/bugzillarc&lt;/span&gt;
&lt;span class="k"&gt;[bugzilla.redhat.com]&lt;/span&gt;
&lt;span class="na"&gt;api_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;MY-EXAMPLE-API-KEY&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it, /usr/bin/bugzilla and python-bugzilla using tools should pick it up automagically. Note, API keys are as good as passwords in certain ways, so treat it with the same secrecy you would treat a password.&lt;/p&gt;</content><category term="fedora"></category></entry><entry><title>Setting custom network names on Fedora</title><link href="https://crobinso.github.io/2018/10/setting-custom-network-names-on-fedora.html" rel="alternate"></link><published>2018-10-04T21:27:00-04:00</published><updated>2018-10-04T21:27:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2018-10-04:/2018/10/setting-custom-network-names-on-fedora.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;systemd predictable network names&lt;/a&gt; give us host interface names like &lt;strong&gt;enp3s0&lt;/strong&gt;. On one of my hosts, I have two interfaces: one that is my regular hard wired connection, and another I only plug in occasionally for some virt network testing. I can never remember the systemd names, so I want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;systemd predictable network names&lt;/a&gt; give us host interface names like &lt;strong&gt;enp3s0&lt;/strong&gt;. On one of my hosts, I have two interfaces: one that is my regular hard wired connection, and another I only plug in occasionally for some virt network testing. I can never remember the systemd names, so I want to rename the interfaces to something more descriptive for my needs. in my case &lt;strong&gt;lan0main&lt;/strong&gt; and &lt;strong&gt;lan1pcie&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The page referenced says to use systemd links. However after struggling with that for a while I'm that's only relevant to systemd-networkd usage and doesn't apply to Fedora's default use of NetworkManager. So I needed another way.&lt;/p&gt;
&lt;p&gt;Long story short I ended up with some custom udev rules that are patterned after the old 70-persistent-net.rules file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat /etc/udev/rules.d/99-cole-nic-names.rules
&lt;span class="go"&gt;SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;70:8b:cd:80:e5:5f&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, NAME=&amp;quot;lan0main&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;68:05:ca:1a:f5:da&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, NAME=&amp;quot;lan1pcie&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Configuring offlineimap + dovecot + thunderbird</title><link href="https://crobinso.github.io/2017/05/configuring-offlineimap-dovecot.html" rel="alternate"></link><published>2017-05-18T08:01:00-04:00</published><updated>2017-05-18T08:01:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2017-05-18:/2017/05/configuring-offlineimap-dovecot.html</id><summary type="html">&lt;p&gt;Recently some internal discussions at Red Hat motivated me to look into using &lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwi9uomL7_fTAhXFqlQKHaGNCn0QFggnMAA&amp;amp;url=http%3A%2F%2Fwww.offlineimap.org%2F&amp;amp;usg=AFQjCNEWRAYFBP6Wj-bMnmtNno_ht0YKBQ&amp;amp;sig2=N58DcSwDbMJOKjNqKK_Ieg"&gt;offlineimap&lt;/a&gt;. I had thought about doing this for some time as a step towards giving &lt;a href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; a try, but for now I decided to keep my original thunderbird setup. This turned out to be a bit more …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently some internal discussions at Red Hat motivated me to look into using &lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwi9uomL7_fTAhXFqlQKHaGNCn0QFggnMAA&amp;amp;url=http%3A%2F%2Fwww.offlineimap.org%2F&amp;amp;usg=AFQjCNEWRAYFBP6Wj-bMnmtNno_ht0YKBQ&amp;amp;sig2=N58DcSwDbMJOKjNqKK_Ieg"&gt;offlineimap&lt;/a&gt;. I had thought about doing this for some time as a step towards giving &lt;a href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; a try, but for now I decided to keep my original thunderbird setup. This turned out to be a bit more work than I anticipated, so I'm documenting it here.&lt;/p&gt;
&lt;p&gt;The primary difficulty is that offlineimap stores mail locally in Maildir format, but thunderbird only reads mbox format. The common solution to this is to serve the offlineimap mail via a local mail server, and have thunderbird connect to that. For the mail server I'm using &lt;a href="https://www.dovecot.org/"&gt;dovecot&lt;/a&gt;. Getting offlineimap output and dovecot to play nicely together in a format that thunderbird can consume was a bit tricky...&lt;/p&gt;
&lt;p&gt;Here's the ~/.offlineimaprc I settled on:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[general]&lt;/span&gt;
&lt;span class="na"&gt;accounts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;work &lt;/span&gt;

&lt;span class="k"&gt;[Account work]&lt;/span&gt;
&lt;span class="na"&gt;localrepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;local-work&lt;/span&gt;
&lt;span class="na"&gt;remoterepository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;remote-work&lt;/span&gt;

&lt;span class="c1"&gt;# Do a full check every 2 minutes&lt;/span&gt;
&lt;span class="c1"&gt;# autorefresh = 2&lt;/span&gt;
&lt;span class="c1"&gt;# Do 5 quick checks between every full check&lt;/span&gt;
&lt;span class="c1"&gt;# quick = 5&lt;/span&gt;


&lt;span class="k"&gt;[Repository local-work]&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Maildir&lt;/span&gt;
&lt;span class="na"&gt;localfolders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;~/.maildir&lt;/span&gt;

&lt;span class="c1"&gt;# Translate your maildir folder names to the format the remote server expects&lt;/span&gt;
&lt;span class="c1"&gt;# So this reverses the change we make with the remote nametrans setting&lt;/span&gt;
&lt;span class="na"&gt;nametrans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;lambda name: re.sub(&amp;#39;^\.&amp;#39;, &amp;#39;&amp;#39;, name)&lt;/span&gt;


&lt;span class="k"&gt;[Repository remote-work]&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;IMAP&lt;/span&gt;
&lt;span class="na"&gt;keepalive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;300&lt;/span&gt;
&lt;span class="na"&gt;ssl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
&lt;span class="na"&gt;sslcacertfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/etc/ssl/certs/ca-bundle.crt&lt;/span&gt;
&lt;span class="na"&gt;remotehost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$YOUR-WORK-MAIL-SERVER&lt;/span&gt;
&lt;span class="na"&gt;remoteuser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$YOUR-USERNAME&lt;/span&gt;
&lt;span class="c1"&gt;# You can specify remotepass= , but my work setup implicitly uses kerberos&lt;/span&gt;

&lt;span class="c1"&gt;# Turn this on if you are manually messing with your maildir at all&lt;/span&gt;
&lt;span class="c1"&gt;# I lost some mail in my experiments :(&lt;/span&gt;
&lt;span class="c1"&gt;#readonly = yes&lt;/span&gt;

&lt;span class="c1"&gt;# Need to exclude &amp;#39;&amp;#39; otherwise it complains about infinite naming loop?&lt;/span&gt;
&lt;span class="na"&gt;folderfilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;lambda foldername: foldername not in [&amp;#39;&amp;#39;]&lt;/span&gt;
&lt;span class="c1"&gt;# For Dovecot to see the folders right I want them starting with a dot,&lt;/span&gt;
&lt;span class="c1"&gt;# and dovecot set to look for .INBOX as the toplevel Maildir&lt;/span&gt;
&lt;span class="na"&gt;nametrans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;lambda name: &amp;#39;.&amp;#39; + name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A few notes here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;autorefresh/quick are commented out because I'm not using them: I'm invoking 'offlineimap -o' with cron ever 2 minutes, with a small wrapper that ensures offlineimap isn't already running (not sure if that will have nasty side effects), and also checks that I'm on my work VPN (checking for a /sys/net/class/ path). I went with this setup because running offlineimap persistently will exit if it can't resolve the remote server after a few attempts, which will trigger if I leave the VPN. Maybe there's a setting to keep it running persistently but I couldn't find it.&lt;/li&gt;
&lt;li&gt;Enable the 'readonly' option and 'offlineimap --dry-run' when initially configuring things or messing with maildir layout: I lost a few hours of mail somehow during the setup process :/&lt;/li&gt;
&lt;li&gt;My setup implicitly depends on having authenticated with my companies kerberos. Still haven't figured out a good way of keeping the kerberos ticket fresh on a machine that moves on and off the VPN regularly. I know &lt;a href="https://jhrozek.wordpress.com/2015/07/17/get-rid-of-calling-manually-calling-kinit-with-sssds-help/"&gt;SSSD can kinda handle&lt;/a&gt; it but it seems to tie local login to work infrastructure which I'm not sure I want.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For dovecot, I just needed to drop this into /etc/dovecot/local.conf and start/enable the service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;protocols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;imap imaps&lt;/span&gt;
&lt;span class="na"&gt;listen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;127.0.0.1&lt;/span&gt;
&lt;span class="na"&gt;mail_location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;maildir:~/.maildir:INBOX=~/.maildir/.INBOX&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then configure thunderbird to connect to 127.0.0.1. User and password are the same as your local machine user account.&lt;/p&gt;
&lt;p&gt;The tricky part seems to be formatting the maildir directory names in a way that dovecot will understand and properly advertise as folders/subfolders. I played with dovecot LAYOUT=fs, various sep/separator values and offlineimap renamings, but the above config is the only thing I found that gave expected results (and I can't take credit for that setup, I eventually found it on an internal wiki page :) )&lt;/p&gt;
&lt;p&gt;Here's some (trimmed) directories in my ~/.maildir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ls -1da .maildir/
&lt;span class="go"&gt;.Drafts&lt;/span&gt;
&lt;span class="go"&gt;.INBOX&lt;/span&gt;
&lt;span class="go"&gt;.INBOX.fedora&lt;/span&gt;
&lt;span class="go"&gt;.INBOX.libvirt&lt;/span&gt;
&lt;span class="go"&gt;.INBOX.qemu&lt;/span&gt;
&lt;span class="go"&gt;.INBOX.virt-tools&lt;/span&gt;
&lt;span class="go"&gt;.Junk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So .Drafts, .INBOX, .Junk are all top level folders, and things like .INBOX.fedora is a 'fedora' subfolder of my inbox. That's the naming scheme the default dovecot config seems to expect.&lt;/p&gt;</content><category term="fedora"></category></entry><entry><title>Easy qemu commandline passthrough with virt-xml</title><link href="https://crobinso.github.io/2017/03/easy-qemu-commandline-passthrough-with.html" rel="alternate"></link><published>2017-03-24T21:30:00-04:00</published><updated>2017-03-24T21:30:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2017-03-24:/2017/03/easy-qemu-commandline-passthrough-with.html</id><summary type="html">&lt;p&gt;Libvirt has supported &lt;a href="https://libvirt.org/drvqemu.html#qemucommand"&gt;qemu commandline option passthrough&lt;/a&gt; for qemu/kvm VMs for quite a while. The format for it is a bit of a pain though since it requires setting a magic xmlns value at the top of the domain XML. Basically doing it by hand kinda sucks.&lt;/p&gt;
&lt;p&gt;In the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Libvirt has supported &lt;a href="https://libvirt.org/drvqemu.html#qemucommand"&gt;qemu commandline option passthrough&lt;/a&gt; for qemu/kvm VMs for quite a while. The format for it is a bit of a pain though since it requires setting a magic xmlns value at the top of the domain XML. Basically doing it by hand kinda sucks.&lt;/p&gt;
&lt;p&gt;In the recently released &lt;a href="http://blog.wikichoon.com/2017/03/virt-manager-141-released.html"&gt;virt-manager 1.4.1&lt;/a&gt;, we added a virt-install/virt-xml option &lt;strong&gt;--qemu-commandline&lt;/strong&gt; that tweaks option passthrough for new or existing VMs. So for example, if you wanted to add the qemu option string '-device FOO' to an existing VM named &lt;strong&gt;f25&lt;/strong&gt;, you can do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./virt-xml f25 --edit --confirm --qemu-commandline=&amp;quot;-device FOO&amp;quot;

&lt;span class="gd"&gt;--- Original XML&lt;/span&gt;
&lt;span class="gi"&gt;+++ Altered XML&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,4 +1,4 @@&lt;/span&gt;
&lt;span class="gd"&gt;-&amp;lt;domain type=&amp;quot;kvm&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+&amp;lt;domain xmlns:qemu=&amp;quot;http://libvirt.org/schemas/domain/qemu/1.0&amp;quot; type=&amp;quot;kvm&amp;quot;&amp;gt;&lt;/span&gt;
   &amp;lt;name&amp;gt;f25&amp;lt;/name&amp;gt;
   &amp;lt;uuid&amp;gt;9b6f1795-c88b-452a-a54c-f8579ddc18dd&amp;lt;/uuid&amp;gt;
   &amp;lt;memory unit=&amp;quot;KiB&amp;quot;&amp;gt;4194304&amp;lt;/memory&amp;gt;
&lt;span class="gu"&gt;@@ -104,4 +104,8 @@&lt;/span&gt;
       &amp;lt;address type=&amp;quot;pci&amp;quot; domain=&amp;quot;0x0000&amp;quot; bus=&amp;quot;0x00&amp;quot; slot=&amp;quot;0x0a&amp;quot; function=&amp;quot;0x0&amp;quot;/&amp;gt;
     &amp;lt;/rng&amp;gt;
   &amp;lt;/devices&amp;gt;
&lt;span class="gi"&gt;+  &amp;lt;qemu:commandline&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    &amp;lt;qemu:arg value=&amp;quot;-device&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    &amp;lt;qemu:arg value=&amp;quot;foo&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+  &amp;lt;/qemu:commandline&amp;gt;&lt;/span&gt;
 &amp;lt;/domain&amp;gt;

Define &amp;#39;f25&amp;#39; with the changed XML? (y/n):
&lt;/pre&gt;&lt;/div&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager 1.4.1 released!</title><link href="https://crobinso.github.io/2017/03/virt-manager-141-released.html" rel="alternate"></link><published>2017-03-08T19:15:00-05:00</published><updated>2017-03-08T19:15:00-05:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2017-03-08:/2017/03/virt-manager-141-released.html</id><summary type="html">&lt;p&gt;I've just released virt-manager 1.4.1. The highlights are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage/nodedev event API support (Jovanka Gulicoska)&lt;/li&gt;
&lt;li&gt;UI options for enabling spice GL (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;Add default virtio-rng /dev/urandom for supported guest OS&lt;/li&gt;
&lt;li&gt;Cloning and rename support for UEFI VMs (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;libguestfs inspection UI improvements (Pino Toscano)&lt;/li&gt;
&lt;li&gt;virt-install …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just released virt-manager 1.4.1. The highlights are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage/nodedev event API support (Jovanka Gulicoska)&lt;/li&gt;
&lt;li&gt;UI options for enabling spice GL (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;Add default virtio-rng /dev/urandom for supported guest OS&lt;/li&gt;
&lt;li&gt;Cloning and rename support for UEFI VMs (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;libguestfs inspection UI improvements (Pino Toscano)&lt;/li&gt;
&lt;li&gt;virt-install: Add --qemu-commandline&lt;/li&gt;
&lt;li&gt;virt-install: Add --network vhostuser (Chen Hanxiao)&lt;/li&gt;
&lt;li&gt;virt-install: Add --sysinfo (Charles Arnold)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plus the usual slew of bug fixes and small improvements.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>python-bugzilla 2.0.0 released!</title><link href="https://crobinso.github.io/2017/02/python-bugzilla-200-released.html" rel="alternate"></link><published>2017-02-08T16:22:00-05:00</published><updated>2017-02-08T16:22:00-05:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2017-02-08:/2017/02/python-bugzilla-200-released.html</id><summary type="html">&lt;p&gt;I'm happy to announce a new release of python-bugzilla, version 2.0.0.&lt;/p&gt;
&lt;p&gt;This release contains several small to medium API breaks as &lt;a href="http://blog.wikichoon.com/2016/06/python-bugzilla-api-changes-in-git.html"&gt;previously mentioned&lt;/a&gt; on the blog. If you hit any issues, check that page first to see if it's an expected change.
 
The major changes in the release …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm happy to announce a new release of python-bugzilla, version 2.0.0.&lt;/p&gt;
&lt;p&gt;This release contains several small to medium API breaks as &lt;a href="http://blog.wikichoon.com/2016/06/python-bugzilla-api-changes-in-git.html"&gt;previously mentioned&lt;/a&gt; on the blog. If you hit any issues, check that page first to see if it's an expected change.
 
The major changes in the release are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Several fixes for use with bugzilla 5&lt;/li&gt;
&lt;li&gt;This release contains several smallish API breaks:&lt;/li&gt;
&lt;li&gt;Bugzilla.bug_autorefresh now defaults to False&lt;/li&gt;
&lt;li&gt;Credentials are now cached in ~/.cache/python-bugzilla/&lt;/li&gt;
&lt;li&gt;bin/bugzilla was converted to argparse&lt;/li&gt;
&lt;li&gt;bugzilla query --boolean_chart option is removed&lt;/li&gt;
&lt;li&gt;Unify command line flags across sub commands&lt;/li&gt;
&lt;li&gt;More details at: &lt;a href="http://blog.wikichoon.com/2016/06/python-bugzilla-api-changes-in-git.html"&gt;http://blog.wikichoon.com/2016/06/python-bugzilla-api-changes-in-git.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="fedora"></category></entry><entry><title>UEFI virt roms now in official Fedora repos</title><link href="https://crobinso.github.io/2016/06/uefi-virt-support-now-in-official.html" rel="alternate"></link><published>2016-06-29T13:27:00-04:00</published><updated>2016-06-29T13:27:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2016-06-29:/2016/06/uefi-virt-support-now-in-official.html</id><summary type="html">&lt;p&gt;&lt;a href="https://kparal.wordpress.com/2016/06/27/uefi-for-qemu-now-in-fedora-repositories/"&gt;Kamil&lt;/a&gt; got to it first, but just a note that UEFI roms for x86 and aarch64 virt are now shipped in the standard Fedora repos, where previously the recommended place to grab them was an external nightly repo. Kamil has updated the &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU"&gt;UEFI+QEMU wiki page&lt;/a&gt; to reflect this change …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://kparal.wordpress.com/2016/06/27/uefi-for-qemu-now-in-fedora-repositories/"&gt;Kamil&lt;/a&gt; got to it first, but just a note that UEFI roms for x86 and aarch64 virt are now shipped in the standard Fedora repos, where previously the recommended place to grab them was an external nightly repo. Kamil has updated the &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU"&gt;UEFI+QEMU wiki page&lt;/a&gt; to reflect this change.&lt;/p&gt;
&lt;p&gt;On up to date Fedora 23+ these roms will be installed automatically with the relevant qemu packages, and libvirt is properly configured to advertise the rom files to applications, so &lt;a href="http://blog.wikichoon.com/2016/01/uefi-support-in-virt-install-and-virt.html"&gt;enabling this with tools like virt-manager&lt;/a&gt; is available out of the box.&lt;/p&gt;
&lt;p&gt;For the curious, the reason we can now ship these binaries in Fedora is because the problematic EDK2 'FatPkg' code, which had a &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU&amp;amp;diff=431056&amp;amp;oldid=423634#EDK2_Licensing_Issues"&gt;Fedora incompatible license&lt;/a&gt;, was replaced with an implementation with a less restrictive (and more Fedora friendly) license.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager 1.4.0 release</title><link href="https://crobinso.github.io/2016/06/virt-manager-140-release.html" rel="alternate"></link><published>2016-06-18T11:06:00-04:00</published><updated>2016-06-18T11:06:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2016-06-18:/2016/06/virt-manager-140-release.html</id><summary type="html">&lt;p&gt;I've just released virt-manager 1.4.0. Besides the &lt;a href="http://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html"&gt;spice GL bits that I previously talked about&lt;/a&gt;, nothing too much exciting in this release except a lot of virt-install/virt-xml command line extensions.&lt;/p&gt;
&lt;p&gt;The changelog highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager: spice GL console support (Marc-André Lureau, Cole Robinson)&lt;/li&gt;
&lt;li&gt;Bump gtk and pygobject deps …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just released virt-manager 1.4.0. Besides the &lt;a href="http://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html"&gt;spice GL bits that I previously talked about&lt;/a&gt;, nothing too much exciting in this release except a lot of virt-install/virt-xml command line extensions.&lt;/p&gt;
&lt;p&gt;The changelog highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager: spice GL console support (Marc-André Lureau, Cole Robinson)&lt;/li&gt;
&lt;li&gt;Bump gtk and pygobject deps to 3.14&lt;/li&gt;
&lt;li&gt;virt-manager: add checkbox to forget keyring password (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;cli: add --graphics gl= (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --video accel3d= (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --graphics listen=none (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --transient flag (Richard W.M. Jones)&lt;/li&gt;
&lt;li&gt;cli: --features gic= support, and set a default for it (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;cli: Expose --video heads, ram, vram, vgamem&lt;/li&gt;
&lt;li&gt;cli: add --graphics listen=socket&lt;/li&gt;
&lt;li&gt;cli: add device address.type/address.bus/...&lt;/li&gt;
&lt;li&gt;cli: add --disk seclabelX.model (and .label, .relabel)&lt;/li&gt;
&lt;li&gt;cli: add --cpu cellX.id (and .cpus, and .memory)&lt;/li&gt;
&lt;li&gt;cli: add --network rom_bar= and rom_file=&lt;/li&gt;
&lt;li&gt;cli: add --disk backing_format=&lt;/li&gt;
&lt;/ul&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>check-pylint: mini tool for running pylint anywhere</title><link href="https://crobinso.github.io/2016/06/check-pylint-mini-tool-for-running.html" rel="alternate"></link><published>2016-06-10T08:46:00-04:00</published><updated>2016-06-10T08:46:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:crobinso.github.io,2016-06-10:/2016/06/check-pylint-mini-tool-for-running.html</id><summary type="html">&lt;p&gt;pylint and pep8 are indispensable tools for python development IMO. For projects I maintain I've long ago added a 'setup pylint' sub-command to run both commands, and I've documented this as a necessary step in the contributor guidelines.&lt;/p&gt;
&lt;p&gt;But over the years I've accumulated many repos for small bits of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;pylint and pep8 are indispensable tools for python development IMO. For projects I maintain I've long ago added a 'setup pylint' sub-command to run both commands, and I've documented this as a necessary step in the contributor guidelines.&lt;/p&gt;
&lt;p&gt;But over the years I've accumulated many repos for small bits of python code that never have need for a setup.py script, but I still want the convenience of being able to run pylint and pep8 with a single command and a reasonable set of options.&lt;/p&gt;
&lt;p&gt;So, a while back I wrote this tiny '&lt;a href="https://github.com/crobinso/check-pylint"&gt;check-pylint&lt;/a&gt;' script which does exactly that. The main bit it adds is automatically searching the current directory for python scripts and modules and passing them to pylint/pep8. From the README:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple helper script that scoops up all python modules and scripts beneath the current directory, and passes them through pylint and pep8. Has a bit of smarts to ignore .git directory, and handle files that don't end in .py&lt;/p&gt;
&lt;p&gt;The point is that you can just fire off 'check-pylint' in any directory containing python code and get a quick report.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="fedora"></category><category term="virt"></category></entry></feed>